package edu.sinica.iis.util

import com.graphhopper.{CARGraphHopper, GraphHopper}
import com.graphhopper.routing.util.EncodingManager
import org.scalatest.FlatSpec
import edu.sinica.iis.util.Google
import edu.sinica.iis.util.Google.{QueryResult, Step}
import edu.sinica.iis.util.Interpolation.Entry
import edu.sinica.iis.util.ResponseInterface.Point

/** Tests for Google API is currently disabled due to the absence of API access key.
  *
  */
class GoogleSpec extends FlatSpec {
  "The parsePolyline function" should "parse polyline string into List of Point" in {
    //val testString = "oiqwCucbeV@CFGNMx@k@Z[LMJMDKBI@G@K?I?MAIAIGOQ]OWSW"
    /*
    println(Google.parsePolyline(testString))

    List(Point(24.99752,121.58539), Point(24.997510000000002,121.58541000000001),
    Point(24.997470000000003,121.58545000000001),
    Point(24.997390000000003,121.58552000000002),
    Point(24.997100000000003,121.58574000000002),
    Point(24.99696,121.58588), Point(24.99689,121.58595000000001),
    Point(24.996830000000003,121.58602), Point(24.9968,121.58608000000001),
    Point(24.99678,121.58613000000001), Point(24.99677,121.58617000000001),
    Point(24.996760000000002,121.58623000000001), Point(24.996760000000002,121.58628000000002),
    Point(24.996760000000002,121.58635000000001), Point(24.99677,121.58640000000001),
    Point(24.99678,121.58645000000001), Point(24.996820000000003,121.58653000000001),
    Point(24.996910000000003,121.58668000000002), Point(24.996990000000004,121.58680000000001),
    Point(24.997090000000004,121.58692))
     */

  }

  "The insert function" should "produce intermidiate points between points" in {
    //val step = Step(Point(0, 0), Point(1, 1), 100, 100)
    //assert(step.insert(3) == Vector(Point(0.25,0.25), Point(0.5,0.5), Point(0.75,0.75), Point(1.0,1.0)))
  }

  "The query function" should "call google api" in {
    //val resultSet = Google.query("24.997285, 121.585183", "25.038065, 121.522528", "foot")
    /*
    println(resultSet)

    QueryResult(List(Step(Point(25.0431688,121.6144288),Point(25.0437198,121.6161922),189.0,68.0),
      Step(Point(25.0437198,121.6161922),Point(25.0453559,121.6178803),263.0,83.0),
      Step(Point(25.0453559,121.6178803),Point(25.0504637,121.6195314),599.0,100.0),
      Step(Point(25.0504637,121.6195314),Point(25.0548839,121.6216944),574.0,83.0),
      Step(Point(25.0548839,121.6216944),Point(25.0551162,121.6172357),463.0,99.0)),2088.0,433.0)
      */
  }

  "The recreate function" should "produce detailed route for google" in {
    //val hopper: GraphHopper = new CARGraphHopper().forServer
    //hopper.setDataReaderFile("map_cache/map.osm")
    // where to store graphhopper files?
    //.setGraphHopperLocation("graph_cache")
    //hopper.setEncodingManager(new EncodingManager("car,foot,bike"))
    //hopper.setCHEnabled(false)

    // now this can take minutes if it imports or a few seconds for loading
    // of course this is dependent on the area you import
    //hopper.importOrLoad

    //val resultSet = Google.query("24.997285, 121.585183", "25.038065, 121.522528", "foot")
    //val recreated = Google.recreate(resultSet.route, "car", hopper)
    /*
    println(recreated)

    List(Step(Point(25.043174058978344,121.61442665656391),Point(25.04341527916674,121.61524381373623),86.58099333620726,21.666666666666668),
    Step(Point(25.04341527916674,121.61524381373623),Point(25.043736212933126,121.61618873364155),101.66152814773564,21.666666666666668),
    Step(Point(25.043736212933126,121.61618873364155),Point(25.04372127522927,121.61619593044921),1.812334039769813,21.666666666666668),
    Step(Point(25.04372127522927,121.61619593044921),Point(25.042578392682486,121.61683078743884),142.26890923431105,10.25),
    Step(Point(25.042578392682486,121.61683078743884),Point(25.042432175035003,121.61698296555093),22.3466990117572,10.25),
    Step(Point(25.042432175035003,121.61698296555093),Point(25.042602979599007,121.61692801751781),19.782857110192598,10.25),
    Step(Point(25.042602979599007,121.61692801751781),Point(25.043853559580153,121.61623883879719),155.42691482176122,10.25),
    Step(Point(25.043853559580153,121.61623883879719),Point(25.044200384114692,121.61688871570428),75.98332204678898,10.25),
    Step(Point(25.044200384114692,121.61688871570428),Point(25.044572354359307,121.61742124596435),67.74055511933565,10.25),
    Step(Point(25.044572354359307,121.61742124596435),Point(25.045351498842646,121.61790367106877),99.33711764197396,10.25),
    Step(Point(25.045351498842646,121.61790367106877),Point(25.04536302237689,121.61789803168413),1.4016518562029214,10.25),
    Step(Point(25.04536302237689,121.61789803168413),Point(25.045351498842646,121.61790367106877),1.4016518562029214,11.875),
    Step(Point(25.045351498842646,121.61790367106877),Point(25.046195649643145,121.61839168410879),105.9603747652886,11.875),
    Step(Point(25.046195649643145,121.61839168410879),Point(25.04764404254356,121.61901920927359),173.0162215318744,11.875),
    Step(Point(25.04764404254356,121.61901920927359),Point(25.048231520836758,121.61919355286345),67.64436952112553,11.875),
    Step(Point(25.048231520836758,121.61919355286345),Point(25.049319491892742,121.61939024819561),122.5887993908966,11.875),
    Step(Point(25.049319491892742,121.61939024819561),Point(25.050195866455045,121.61944221599643),97.58891935507249,11.875),
    Step(Point(25.050195866455045,121.61944221599643),Point(25.050466136272238,121.61952882899782),31.293552491230507,11.875),
    Step(Point(25.050466136272238,121.61952882899782),Point(25.050465940693893,121.61953159317177),0.27929811793283144,11.875),
    Step(Point(25.050465940693893,121.61953159317177),Point(25.050466136272238,121.61952882899782),0.27929811793283144,4.823529411764706),
    Step(Point(25.050466136272238,121.61952882899782),Point(25.05058813953224,121.61964245035445),17.749478791002808,4.823529411764706),
    Step(Point(25.05058813953224,121.61964245035445),Point(25.05109608287579,121.61963667615436),56.48371787125409,4.823529411764706),
    Step(Point(25.05109608287579,121.61963667615436),Point(25.051248074723365,121.61965437128367),16.99446314519475,4.823529411764706),
    Step(Point(25.051248074723365,121.61965437128367),Point(25.05145073052013,121.61971155449103),23.258889419162884,4.823529411764706),
    Step(Point(25.05145073052013,121.61971155449103),Point(25.05166921880102,121.61983895942208),27.476356047360007,4.823529411764706),
    Step(Point(25.05166921880102,121.61983895942208),Point(25.051809289719372,121.61994885548835),19.10858004718792,4.823529411764706),
    Step(Point(25.051809289719372,121.61994885548835),Point(25.051934832005237,121.62011165067803),21.536041803986,4.823529411764706),
    Step(Point(25.051934832005237,121.62011165067803),Point(25.05235634861193,121.62081908332152),85.29474203567399,4.823529411764706),
    Step(Point(25.05235634861193,121.62081908332152),Point(25.05247835187193,121.62096008556247),19.641412366111666,4.823529411764706),
    Step(Point(25.05247835187193,121.62096008556247),Point(25.052678772494467,121.62107594209334),25.156690369661202,4.823529411764706),
    Step(Point(25.052678772494467,121.62107594209334),Point(25.053743274221045,121.62134025144593),121.3246358343664,4.823529411764706),
    Step(Point(25.053743274221045,121.62134025144593),Point(25.054030866638517,121.62138793516282),32.33754035228574,4.823529411764706),
    Step(Point(25.054030866638517,121.62138793516282),Point(25.054310077152625,121.62148125368687),32.438665046010485,4.823529411764706),
    Step(Point(25.054310077152625,121.62148125368687),Point(25.054640324144966,121.6216786940771),41.76177327864335,4.823529411764706),
    Step(Point(25.054640324144966,121.6216786940771),Point(25.054763258727565,121.62170421231622),13.90928560151904,4.823529411764706),
    Step(Point(25.054763258727565,121.62170421231622),Point(25.05488374778253,121.62169249301604),13.449679548233126,4.823529411764706),
    Step(Point(25.05488374778253,121.62169249301604),Point(25.054885820781124,121.62169229138699),0.23139999482119555,9.6),
    Step(Point(25.054885820781124,121.62169229138699),Point(25.054981188214896,121.62162076581167),12.82042401895223,9.6),
    Step(Point(25.054981188214896,121.62162076581167),Point(25.054982678331047,121.62104837494452),57.6581353338501,9.6),
    Step(Point(25.054982678331047,121.62104837494452),Point(25.054878742729397,121.62053558872347),52.93095744630003,9.6),
    Step(Point(25.054878742729397,121.62053558872347),Point(25.054815785321946,121.62004087016078),50.323197372134324,9.6),
    Step(Point(25.054815785321946,121.62004087016078),Point(25.054799766573304,121.61962456896062),41.972593244798496,9.6),
    Step(Point(25.054799766573304,121.61962456896062),Point(25.054817834231656,121.6191842396375),44.4006533154143,9.6),
    Step(Point(25.054817834231656,121.6191842396375),Point(25.054870360826037,121.61882232767691),36.92095266330231,9.6),
    Step(Point(25.054870360826037,121.61882232767691),Point(25.054907799994375,121.61867014956482),15.884406968418347,9.6),
    Step(Point(25.054907799994375,121.61867014956482),Point(25.055109025297163,121.61723443558098),146.34252028984884,9.6))

      */
  }
}
